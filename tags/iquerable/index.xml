<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>IQuerable on Zony 的博客</title>
        <link>https://real-zony.github.io/tags/iquerable/</link>
        <description>Recent content in IQuerable on Zony 的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Fri, 14 Apr 2017 13:09:00 +0000</lastBuildDate><atom:link href="https://real-zony.github.io/tags/iquerable/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>DbSet 两种 Where 查询的性能问题</title>
        <link>https://real-zony.github.io/p/performance-issues-with-dbset-two-where-queries/</link>
        <pubDate>Fri, 14 Apr 2017 13:09:00 +0000</pubDate>
        
        <guid>https://real-zony.github.io/p/performance-issues-with-dbset-two-where-queries/</guid>
        <description>&lt;p&gt;说白了 DBSet.Where() 有两个重载，一个是IQueryable还有一个是IEnumerable，前者则是会延迟执行，而后者则是将整个数据集加载出来之后再进行Where查询。&lt;/p&gt;
&lt;p&gt;IQueryable这个查询对象接收的是&lt;code&gt;Expression&amp;lt;Func&amp;lt;T,bool&amp;gt;&amp;gt;&lt;/code&gt;，也就是一个表达式树，他将会把查询条件解析成SQL，在数据源提供器里面执行查询。&lt;/p&gt;
&lt;p&gt;而List是一个集合，他接收的是一个&lt;code&gt;Func&amp;lt;T,bool&amp;gt;&lt;/code&gt;，也就是一个查询委托，他则是将整个DBSet加载出来放在内存之后，再进行查询，所以后者性能堪忧。&lt;/p&gt;
&lt;p&gt;详细请查看StackOverflow上面的这两篇问题：&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://stackoverflow.com/questions/31368751/funct-bool-vs-manually-expression-performance-in-c-sharp-lambda&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Func vs Manually expression performance in C# lambda&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://stackoverflow.com/questions/793571/why-would-you-use-expressionfunct-rather-than-funct&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Why would you use Expression rather than Func?&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
