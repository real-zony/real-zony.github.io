<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Clion on Zony 的博客</title>
        <link>https://real-zony.github.io/tags/clion/</link>
        <description>Recent content in Clion on Zony 的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 23 Nov 2015 12:29:00 +0000</lastBuildDate><atom:link href="https://real-zony.github.io/tags/clion/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Clion 引用第三方库</title>
        <link>https://real-zony.github.io/p/clion-references-third-party-libraries/</link>
        <pubDate>Mon, 23 Nov 2015 12:29:00 +0000</pubDate>
        
        <guid>https://real-zony.github.io/p/clion-references-third-party-libraries/</guid>
        <description>&lt;p&gt;Clion 是 Jetbrains公司所推出的新一代跨平台 C++ IDE，弥补了 Linux 平台上面 IDE 不强的局面。
Clion 基于 CMAKE 进行编译操作，但是 Clion 与 Intellij 不同，Clion 并没有图形化的第三方库引用界面，只有通过对 CMakeList.txt 进行手动链接才可以引用第三方库。&lt;/p&gt;
&lt;p&gt;我们这里以 Libev 库为例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-cmake&#34; data-lang=&#34;cmake&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;link_libraries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;/usr/local/lib&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;err&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;target_link_libraries&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;Shadowsocks_libev&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;-lev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;第一次编译的时候会报错：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Error While Loading Shared Libraries, Cannot Open Shared Object File
weighttp: error while loading shared libraries: libev.so.4: cannot open shared object file: No such file or directory&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有时候 MySQL 明明指定了静态库却也会出现上述情况。
原因很简单:
因为我们编译的时候默认是存放在 /usr/local 下面的，这是为了 UNIX 的稳定性，防止覆盖之前的库文件。
解决方法:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo ln -s /usr/local/lib/libev.so.4 /usr/lib/libev.so.4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;建立符号链接到 /usr/lib 即可。&lt;/p&gt;
&lt;p&gt;其他解决办法在: &lt;a class=&#34;link&#34; href=&#34;http://www.tuicool.com/articles/Qr2aye&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.tuicool.com/articles/Qr2aye&lt;/a&gt; 就已经提出了解决方案。&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
