<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Shell on Zony 的博客</title>
        <link>https://real-zony.github.io/tags/shell/</link>
        <description>Recent content in Shell on Zony 的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Thu, 30 Jul 2020 07:37:00 +0000</lastBuildDate><atom:link href="https://real-zony.github.io/tags/shell/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>dotNET Core 的 Docker 容器目录乱码问题</title>
        <link>https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/</link>
        <pubDate>Thu, 30 Jul 2020 07:37:00 +0000</pubDate>
        
        <guid>https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/</guid>
        <description>&lt;h2 id=&#34;现象&#34;&gt;现象&lt;/h2&gt;
&lt;p&gt;使用 &lt;code&gt;docker exec -ti &amp;lt;容器名&amp;gt; bash&lt;/code&gt; 进入容器，使用 &lt;code&gt;ls&lt;/code&gt; 命令列出的数据里面，中文没有正常显示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/QQ--20210428215244.png&#34;
	width=&#34;2000&#34;
	height=&#34;1334&#34;
	srcset=&#34;https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/QQ--20210428215244_hubeed76aba3425eb74ffd7e9d7591910d_724362_480x0_resize_box_3.png 480w, https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/QQ--20210428215244_hubeed76aba3425eb74ffd7e9d7591910d_724362_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;QQ&amp;ndash;20210428215244&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;149&#34;
		data-flex-basis=&#34;359px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;
&lt;p&gt;就是对应的 Shell 字符集不正确的问题，调整对应的字符集为 UTF-8 即可。&lt;/p&gt;
&lt;h2 id=&#34;解决&#34;&gt;解决&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先执行 &lt;code&gt;locale -a&lt;/code&gt;，查看输出的内容里面是否有 &lt;strong&gt;C.UTF-8&lt;/strong&gt; 字符集。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/QQ--20210428215256.png&#34;
	width=&#34;678&#34;
	height=&#34;180&#34;
	srcset=&#34;https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/QQ--20210428215256_hu190f7760700d24d1b111903b0f7a56cb_24147_480x0_resize_box_3.png 480w, https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/QQ--20210428215256_hu190f7760700d24d1b111903b0f7a56cb_24147_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;QQ&amp;ndash;20210428215256&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;376&#34;
		data-flex-basis=&#34;904px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行 &lt;code&gt;locale&lt;/code&gt; 查看当前的字符集，如果均为 &lt;strong&gt;POSIX&lt;/strong&gt; 说明有问题，需要进行变更。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/QQ--20210428215301.png&#34;
	width=&#34;696&#34;
	height=&#34;600&#34;
	srcset=&#34;https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/QQ--20210428215301_hucb159894edf2f5952097100c863b1228_92072_480x0_resize_box_3.png 480w, https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/QQ--20210428215301_hucb159894edf2f5952097100c863b1228_92072_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;QQ&amp;ndash;20210428215301&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;116&#34;
		data-flex-basis=&#34;278px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;变更的方法很简单，创建/更改一下环境变量即可。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;export LC_ALL=&amp;quot;C.UTF-8&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;上面这种方法仅对当前会话有效，如果想永久生效，将上面这句话放到对应的 Shell 的 Profile 里面即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/QQ--20210428215308.png&#34;
	width=&#34;2000&#34;
	height=&#34;1334&#34;
	srcset=&#34;https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/QQ--20210428215308_huc14ac4106d0b4ee32d4e0c689d2c1a19_695265_480x0_resize_box_3.png 480w, https://real-zony.github.io/p/docker-container-directory-garbled-problem-with-dotnet-core/QQ--20210428215308_huc14ac4106d0b4ee32d4e0c689d2c1a19_695265_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;QQ&amp;ndash;20210428215308&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;149&#34;
		data-flex-basis=&#34;359px&#34;
	
&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description>
        </item>
        <item>
        <title>CentOS 7.x 安装 ZSH 终端</title>
        <link>https://real-zony.github.io/p/install-zsh-terminal-on-centos-7x/</link>
        <pubDate>Mon, 26 Aug 2019 11:46:52 +0000</pubDate>
        
        <guid>https://real-zony.github.io/p/install-zsh-terminal-on-centos-7x/</guid>
        <description>&lt;h2 id=&#34;一安装基本组件&#34;&gt;一、安装基本组件&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;首先执行 &lt;code&gt;yum&lt;/code&gt; 命令来安装需要的 &lt;code&gt;zsh&lt;/code&gt; 原始程序与 &lt;code&gt;git&lt;/code&gt; 程序来 &lt;code&gt;pull&lt;/code&gt; 代码。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;yum install -y zsh git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装 &lt;code&gt;oh my zsh&lt;/code&gt; 脚本 (这一步需要安装 &lt;code&gt;git&lt;/code&gt;)。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;which zsh&lt;/code&gt; 查看 &lt;code&gt;zsh&lt;/code&gt; 的安装目录，一般都存储在 &lt;code&gt;/usr/bin/zsh&lt;/code&gt; 目录下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;which zsh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 &lt;code&gt;chsh&lt;/code&gt; 命令切换使用的 shell 程序。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;chsh -s /usr/bin/zsh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;二进行可选配置&#34;&gt;二、进行可选配置&lt;/h2&gt;
&lt;h3 id=&#34;21-安装-zsh-图标字体&#34;&gt;2.1 安装 ZSH 图标字体&lt;/h3&gt;
&lt;p&gt;执行以下命令在当前目录拉取图标的仓库，并切换到其目录下，执行 &lt;code&gt;./install.sh&lt;/code&gt; 脚本即可安装成功。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/powerline/fonts.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;22-更换-zsh-主题&#34;&gt;2.2 更换 ZSH 主题&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;vi&lt;/code&gt; 工具编辑 &lt;code&gt;/root/.zshrc&lt;/code&gt; 文件，更改 &lt;code&gt;ZSH_THEME=&amp;quot;robbyussell&amp;quot;&lt;/code&gt; 字段为 &lt;code&gt;ZSH_THEME=&amp;quot;agnoster&amp;quot;&lt;/code&gt; 字段，并通过 &lt;code&gt;source ~/.zshrc&lt;/code&gt; 命令更新它们的配置文件。&lt;/p&gt;
&lt;h3 id=&#34;23-安装插件&#34;&gt;2.3 安装插件&lt;/h3&gt;
&lt;p&gt;使用 ZSH 替换原有的 SHELL 最主要的原因就是要使用其功能强大的插件，这里只推荐安装三个插件，它们分别是 &lt;code&gt;wd&lt;/code&gt;、&lt;code&gt;zsh-syntax-highlighting&lt;/code&gt;、&lt;code&gt;zsh-autosuggestions&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;首先依次执行下列的命令，将后面两个插件的仓库克隆到 Oh My Zsh 的插件目录下。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; ~/.oh-my-zsh/custom/plugins
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/zsh-users/zsh-syntax-highlighting.git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/zsh-users/zsh-autosuggestions.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;完成克隆操作之后，那么两个插件的全路径分别是：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/root/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-syntax-highlighting.zsh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;/root/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;继续使用 &lt;code&gt;vi&lt;/code&gt; 编辑 &lt;code&gt;~/.zshrc&lt;/code&gt; 文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 其他内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;plugins&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  git
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  wd
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  zsh-syntax-highlighting
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  zsh-autosuggestions
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; /root/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; /root/.oh-my-zsh/custom/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;source&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$ZSH&lt;/span&gt;/oh-my-zsh.sh
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 其他内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;编辑完成之后，执行 &lt;code&gt;source ~/.zshrc&lt;/code&gt; 命令更新 ZSH 配置，最后的效果如下图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://real-zony.github.io/p/install-zsh-terminal-on-centos-7x/20190826194101.gif&#34;
	width=&#34;2077&#34;
	height=&#34;1022&#34;
	srcset=&#34;https://real-zony.github.io/p/install-zsh-terminal-on-centos-7x/20190826194101_hu80b7641970bde5d0934187d6b4ed95b8_1395426_480x0_resize_box_1.gif 480w, https://real-zony.github.io/p/install-zsh-terminal-on-centos-7x/20190826194101_hu80b7641970bde5d0934187d6b4ed95b8_1395426_1024x0_resize_box_1.gif 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;20190826194101&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;203&#34;
		data-flex-basis=&#34;487px&#34;
	
&gt;&lt;/p&gt;</description>
        </item>
        <item>
        <title>Linux 下 Shell 的自动交互</title>
        <link>https://real-zony.github.io/p/automatic-interaction-of-shell-under-linux/</link>
        <pubDate>Mon, 12 Feb 2018 17:36:00 +0000</pubDate>
        
        <guid>https://real-zony.github.io/p/automatic-interaction-of-shell-under-linux/</guid>
        <description>&lt;p&gt;在编写脚本的时候经常会遇到这种情况，某些程序的命令执行的之后可能会要求用户进行输入，这个时候就需要一些特殊写法来应对这种问题了。这里参考 &lt;a class=&#34;link&#34; href=&#34;http://os.51cto.com/art/200912/167898.htm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这篇文章&lt;/a&gt;提到可以使用 delimiter 分界符来解决。
也就是说在 Shell 将 delimiter 分界符之后的的所有内容都会当做输入，直到遇到第二个分界符，而最常见的分界符就是 EOF 分界符。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;docker container prune &lt;span class=&#34;s&#34;&gt;&amp;lt;&amp;lt; EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;y
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;类似于上述代码。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
