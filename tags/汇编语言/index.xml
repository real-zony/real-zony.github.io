<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>汇编语言 on Zony 的博客</title>
        <link>https://real-zony.github.io/tags/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/</link>
        <description>Recent content in 汇编语言 on Zony 的博客</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Tue, 15 Dec 2015 05:36:00 +0000</lastBuildDate><atom:link href="https://real-zony.github.io/tags/%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>函数入栈顺序</title>
        <link>https://real-zony.github.io/p/function-stacking-order/</link>
        <pubDate>Tue, 15 Dec 2015 05:36:00 +0000</pubDate>
        
        <guid>https://real-zony.github.io/p/function-stacking-order/</guid>
        <description>&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;约定&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;入栈顺序&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;函数类型&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;_cdecl&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;右→左&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;母函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;_fastcall&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;右→左&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;子函数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;_stdcall&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;右→左&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;子函数&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;如果不指定调用约定的话，默认为_stdcall函数调用函数顺序&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;参数从右到左依次入栈。&lt;/li&gt;
&lt;li&gt;返回地址入栈：将当前代码下一条指令入栈，以确保返回后能够继续执行余下指令。&lt;/li&gt;
&lt;li&gt;代码区跳转：CPU将当前代码跳转到函数区域。&lt;/li&gt;
&lt;li&gt;栈帧调整。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;push3;函数参数从右到左依次入栈push2
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;push  1
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;call  函数地址;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;向当前栈压入当前所在地址；跳转
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;push  ebp;保存旧栈底部
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;movebp,esp;设置新栈底部
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sub  ebp,XXX;设置栈顶
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
